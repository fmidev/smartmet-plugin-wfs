disabled = false;

id = "forecast::parameter";

constructor_name = "wfs_grid_forecast_handler_factory";

title:
{
        eng = "GridForecastTest";
};

abstract:
{
        eng = "GridForecastTest";
};

template = "hash_dump.c2t";

parameters:
(
{
  name = "starttime";
  title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
  abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
  xmlType = "dateTime";
  type = "time";
},
{
  name = "endtime";
  title = { eng = "End of time interval"; fin = "Loppuaika"; };
  abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
  xmlType = "dateTime";
  type = "time";
},
{
  name = "timestep";
  title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
  abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
  xmlType = "int";
  type = "uint";
},
{
  name = "timesteps";
  title = { eng = "Number of timesteps"; fin= "Aika-askelten lukumäärä";};
  abstract = { eng = "Number of timesteps in result set."; fin= "Tulosjoukossa palautettavien aika-askelten lukumäärä.";};
  xmlType = "int";
  type = "uint";
},
{
  name = "origintime";
  title = {eng = "Analysis time"; fin = "Analyysiaika"; };
  abstract = { eng = "Analysis time specifies the time of analysis in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Analyysiaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
  xmlType = "dateTime";
  type = "time";
},
{
  name = "hours";
  title = { eng = "Hours"; };
  abstract = { eng = "Hours"; };
  xmlType = "IntegerArray";
  type = "uint[0..999]";
  minOccurs = 0;
  maxOccurs = 999;
},
{
  name = "times";
  title = { eng = "Hours"; };
  abstract = { eng = "Hours"; };
  xmlType = "IntegerArray";
  type = "uint[0..999]";
  minOccurs = 0;
  maxOccurs = 999;
},
{
  name = "place";
  title = { eng = "The list of sites for which to provide forecast"; };
  abstract = { eng = "The list of sites for which to provide forecast"; };
  xmlType = "xsi:string";
  type = "string";
  minOccurs = 0;
  maxOccurs = 99;
},
{
  name = "latlons";
  title = { eng = "The list of sites for which to provide forecast"; };
  abstract = { eng = "The list of sites for which to provide forecast"; };
  xmlType = "doubleList";
  type = "double[2]";
  minOccurs = 0;
  maxOccurs = 98;
},
{
  name = "parameter";
  title = { eng = "Parameters to return"; };
  abstract = { eng = "Comma separated list of parameters to return"; };
  xmlType = "NameList";
  type = "string[1..99]";
  minOccurs = 0;
  maxOccurs = 999;
},
{
  name = "crs";
  title = { eng = "Coordinate projection to use in results"; };
  abstract = { eng = "Coordinate projection to use in results"; };
  xmlType = "string";
  type = "string";
},
{
  name = "missingText";
  title = { eng = "string to show for missing values"; };
  abstract = { eng = "string to show for missing values"; };
  xmlType = "string";
  type = "string";
},
{
  name = "tz";
  title = { eng = "Time zone"; };
  abstract = { eng = "Time zone"; };
  xmlType = "string";
  type = "string";
},
{
  name = "models";
  title = { eng = "Forecast model list"; };
  abstract = { eng = "Forecast model list"; };
  xmlType = "NameList";
  type = "string[1..9]";
  minOccurs = 0;
  maxOccurs = 1;
},
{
  name = "heights";
  title = { eng = "The list of heights for which to provide forecast"; };
  abstract = { eng = "The list of heights for which to provide forecast"; };
  xmlType = "doubleList";
  type = "double[1..99]";
  minOccurs = 0;
  maxOccurs = 1;
},
{
  name = "level";
  title = { eng = "The list of levels for which to provide forecast"; };
  abstract = { eng = "The list of levels for which to provide forecast"; };
  xmlType = "integerList";
  type = "integer[0..1000000]";
  minOccurs = 0;
  maxOccurs = 100;
}        
);

named_params:
(
  {name:"defaultMeteoParam"; def=["Temperature", "pressure", "WindSpeedMS","WindDirection","Precipitation1h"];},
  {name:"defaultModels"; def=["hirlam_eurooppa_pinta", "pal_skandinavia"];},
  {name:"empty_array"; def=[];},
  {name:"empty_val"; def="${}";}
);

returnTypeNames = [ "testType" ];

handler_params:
{
  hours = ["${hours>empty_array}"];
  times = ["${times>empty_array}"];
  timeSteps = "${}";
  beginTime = "${starttime : now}";
  endTime = "${endtime : after 24 hours}";
  timeStep = "${timestep}";
  model = ["${models > defaultModels}"];
  levelHeights = ["${heights}"];
  level = ["${level}"];
  levelType = "";
  param = ["${parameter > defaultMeteoParam}"];
  maxDistance = 50000.0;
  places = ["${place>empty_array}"];
  latlons = ["${latlons>empty_array}"];
  geoids = [];
  keyword_overwritable = false;
  keyword = "";
  findNearestValid = 0;
  locale = "fi_FI.utf8";
  missingText = "${missingText : nan}";
  originTime = "${origintime}";
  startStep="${}";
  crs = "${crs:EPSG::4326}";
  timeZone = "${tz : UTC}";
};

separateGroups = false;
