
disabled = false;

id = "fmi::forecast::oaas::sealevel::point::timevaluepair";

expiresSeconds = 21600;

constructor_name = "wfs_forecast_handler_factory";

title: { eng = "OAAS Sea Level Model Point"; fin = "OAAS merivedenkorkeusennuste pisteeseen"; };
abstract: { eng = "OAAS forecast model provides sea level height forecast to points. This stored query provides point data encoded in time value pair format."; fin = "OAAS-ennustemalli tarjoaa merivedenkorkeusennustetta pisteisiin. Tämä kysely tarjoaa dataa pisteeseen aika-arvopareina."; };

template = "weather_forecast_timevaluepair.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},

{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "latlon";
	title = { eng = "Location coordinates to return data."; fin = "Paikan koordinaatit";  };
	abstract = { eng = "Location coordinates to return data  (lat,lon). For example 61.2,21"; fin = "Paikan koordinaatit (lat,lon). Esimerkiksi 61.2,21"; };
	xmlType = "gml:pos";
	type = "double[2]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Datapisteen aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
}
);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
        hours = [];
        times = [];
        timeSteps = "${}";
        beginTime = "${starttime: now}";
        endTime = "${endtime: after 48 hours}";
        timeStep = "${timestep: 60}";
        model = ["sealevel"];
	levelHeights = [];
        level = [];
        levelType = "";
        param = ["SeaLevel"];
        maxDistance = 50000.0;
        places = [];
        latlons = ["${latlon}"];
        geoids = ["${geoid}"];
        keyword_overwritable = true;
	keyword = "oaas_sealevel_point";
        findNearestValid = 1;
        locale = "fi_FI.utf8";
        missingText = "NaN";
        originTime = "${}";
        startStep="${}";
        crs = "${crs:EPSG::4258}";
        timeZone = "${timezone: UTC}";
};

named_params = (
    {
	name = "defaultGeoids";
	def = [660415, 659169, 659101, 658225, 653760, -10017238, 646666, 643492, -10000618, 640276, 639734, 633679, 632978];
    }
);

separateGroups = true;
