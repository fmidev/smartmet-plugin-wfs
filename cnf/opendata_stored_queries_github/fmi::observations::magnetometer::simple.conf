disabled = false;
hidden = false;
demo = false;

supportQCParameters = false;
id = "fmi::observations::magnetometer::simple";

expiresSeconds = 3600;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Magnetometer Observations";
	fin = "Magnetometerhavainnot";
};

abstract:
{
	eng = "Magnetometer observations from 12 locations. The data is retuned in simple feature format.";
	fin = "Magnetometerhavainnot 12 pisteestä. Data palautetaan 'simple feature'-tyyppisenä.";
};

template = "weather_observations_simple.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "1971-01-01T00:00:00";
},

{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
},
{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62."; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62."; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide forecast. Region can be given after location name separated by comma (for example Utti)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Utti)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location (place/fmisid/geoid). By default, one location is returned."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista (place/fmisid/geoid). Oletuksena palautetaan yksi paikka."; };
        xmlType = "xsi:int";
        type = "uint";
}
);

returnTypeNames = [ "BsWfs:BsWfsElement" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 12 hours ago rounded down 60 min}";
        endTime = "${endtime: now rounded down 60 min}";
        places = ["${place}"];
        latlons = [];
        meteoParameters = ["${parameters > defaultParameters}"];
        stationType = "magneto";
        timeStep = "${timestep:0}";
        maxDistance = 50000.0;
        wmos = [];
        lpnns = [];
        fmisids = ["${fmisid > defaultSids}"];
        geoids = [];
        numOfStations = "${maxlocations:1}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${bbox}";
        maxEpochs = 20000;
        crs = "${crs:EPSG::4258}";
        timeZone = "UTC";
        qualityInfo = false;
        keyword_overwritable = false;
	keyword = "";
};

named_params = (
    {
	name = "defaultSids";
	def = [100758,101149,101932,102035,133749,133820,133821,133824,133846,133847,133879,133891];
    },
    {
	name = "defaultParameters";
	def = ["MAGNX_PT10S_AVG","MAGNX_PT1M_AVG","MAGNY_PT10S_AVG","MAGNZ_PT10S_AVG","TTECH_PT1M_AVG"];
    }
);

separateGroups = false;
