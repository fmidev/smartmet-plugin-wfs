disabled = true;
hidden = false;

demo     = false;
test     = false;
debugLevel = 0;
id       = "fmi::forecast::hirlam::surface::road::simple";
expiresSeconds = 21600;

constructor_name = "wfs_forecast_handler_factory";
template = "weather_forecast_simple.c2t";
returnTypeNames = ["BsWfs:BsWfsElement"];
defaultLanguage = "eng";

title: {   
            eng = "Hirlam weather forecast for road weather stations as simple feature.";
            fin = "Hirlam sääennuste tiesäähavaintoasemien pisteisiin simple feature muodossa.";
};

abstract: {
            eng = "This stored query fetch Hirlam weather forecast for the locations of the road weather observation stations in Finland. The forecast is returned as simple feature form. By default, forecast is returned for the next 36 hours.";
            fin = "Tämä tallennettu kysely hakee Hirlam sääennusteen Suomen tiesäähavaintoasemien pisteisiin. Sääennuste palautetaan simple feature muodossa. Oletuksena sääennuste palautetaan seuraavalle 36 tunnille.";
};


parameters: (
{
    name      = "starttime";
    title     = {   eng = "Begin of the time interval";
                    fin = "Alkuaika";    };
    abstract  = {   eng = "Parameter starttime specifies the begin of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z).";
                    fin = "Parametri starttime määrittelee aikajakson alkuajan ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z).";    };
    xmlType   = "xsi:dateTime";
    type      = "time";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name      = "endtime";
    title     = {   eng = "End of time interval";
                    fin = "Loppuaika";    };
    abstract  = {   eng = "Parameter endtime specifies the end of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z).";
                    fin = "Parametri endtime määrittelee aikajakson loppuajan ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z).";    };
    xmlType   = "xsi:dateTime";
    type      = "time";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name      = "parameters";
    title     = {   eng = "Parameters to return"; 
                    fin = "Meteorologiset parametrit";   };
    abstract  = {   eng = "Comma separated list of meteorological parameters to return."; 
                    fin = "Meteorologiset parametrit pilkulla erotettuna.";    };
    xmlType   = "gml:NameList";
    type      = "string[0..99]";
    minOccurs = 0;
    maxOccurs = 999;
},
{
    name     = "timestep";
    title    = {   eng = "The time step of data in minutes";
                   fin = "Aika-askel minuutteina";};
    abstract = {   eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. Default timestep is 60 minutes.";
                   fin = "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta. Oletusaika-askel on 60 minuuttia.";};
    xmlType  = "int";
    type     = "uint";
}
);


named_params = (
{
    name = "defaultMeteoParams";
    def  = ["Temperature", "Pressure", "Humidity", "DewPoint", "RadiationGlobalAccumulation","RadiationLWAccumulation","RadiationNetSurfaceLWAccumulation","RadiationNetSurfaceSWAccumulation","RadiationDiffuseAccumulation" , "CloudSymbol", "WindSpeedMS", "WindDirection", "WindVectorMS", "HourlyMaximumGust", "WindUMS", "WindVMS", "TotalCloudCover", "LowCloudCover", "MediumCloudCover", "HighCloudCover", "MiddleAndLowCloudCover", "Precipitation1h", "PrecipitationForm", "PrecipitationType", "WeatherSymbol3"];
},
{
    name = "empty";
    def  = [];
}
);

handler_params:
{
    beginTime = "${starttime: now}";
    crs       = "EPSG::4258";
    endTime   = "${endtime: after 36 hour}";
    findNearestValid = 0;
    geoids    = [];
    hours     = [];
    keyword_overwritable = false;
	keyword   = "finnish_roadobsstations";
    latlons   = [];
    level     = [];
    levelType = "";
    locale    = "fi_FI.utf8";
    maxDistance = 50000.0;
    param     = ["${parameters > defaultMeteoParams}"];
    missingText = "NaN";
    model     = ["hirlam_eurooppa_pinta"];
    originTime = "${}";
    places    = [];
    times     = [];
    timeStep  = "${timestep: 60}";
    timeSteps = "${}";
    timeZone  = "UTC";
    startStep = "${}";
};

separateGroups = true;

