
disabled = false;
demo = false;
hidden = true;

id = "fmi::datasets::observations::weather::timevaluepair";

expiresSeconds = 600;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Instantaneous Weather Observations";
	fin = "Hetkelliset säähavaintoarvot";
};

abstract:
{
	eng = "Real time weather observations from weather stations. Default set contains wind speed, direction, gust, temperature, relative humidity, dew point, pressure reduced to sea level, one hour precipitation amount and visibility. By default, the data is returned from last 20 minutes. By default, the data covers southern Finland. The data is returned in time value pair format.";

	fin = "Reaaliaikaiset säähavainnot suomen havaintoasemilta. Vakiona kysely palauttaa tuulennopeuden ja -suunnan, puuskanopeuden, ilman lämpötilan, suhteellisen kosteuden, kastepisteen, paineen (merenpinnan tasolla), tunnin sademäärän ja näkyvyyden. Oletuksena dataa palautetaan 20 minuuttia pyyntöhetkestä taaksepäin. Oletusalueena on Etelä-Suomi. Data palautetaan 'timevaluepair'-muodossa.";
};

template = "weather_observations_timevaluepair.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "2013-01-01T00:00:00";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
}
,{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide forecast. Region can be given after location name separated by comma (for example Kumpula,Kolari)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Kumpula,Kolari)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "wmo";
        title = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo."; };
        abstract = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo-koodi."; };
        xmlType = "int";
        type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Havainnon aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
/*},
{
        name     = "qualityinfo";
        title    = { eng = "Quality info"; fin = "Laatutieto"; };
        abstract = { eng = "Quality info will be included into result if the value is 'true' Default value is 'false'";
                     fin = "Laatutieto sisällytetään vastaukseen, jos parametrin arvo on 'true' Oletusarvo on 'false'"; };
        xmlType  = "xsi:boolean";
        type     = "bool";
*/}
);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 20 minutes ago rounded down 1 min}";
        endTime = "${endtime: now rounded down 1 min}";
        places = ["${place}"];
        latlons = [];
        meteoParameters = ["${parameters > defaultMeteoParam}"];
        stationType = "opendata";
        timeStep = "${timestep:0}";
        maxDistance = 50000.0;
        wmos = ["${wmo}"];
        lpnns = [];
        fmisids = ["${fmisid}"];
        geoids = ["${geoid}"];
        numOfStations = "${maxlocations:1}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${bbox > defaultBBox}";
        maxEpochs = 20000;
        crs = "${crs:EPSG::4258}";
        timeZone = "${timezone: UTC}";
        qualityInfo = false;
        keyword_overwritable = false;
	keyword = "";
};

named_params = (
    {
        name = "defaultBBox";
	def = "19.1,59.7,31.7,70.1,EPSG::4326";  #<-- Whole Finland
    }
    ,{
        name = "defaultMeteoParam";
        def = ["t2m","ws_10min","wg_10min", "wd_10min","rh","td","r_1h","ri_10min","snow_aws","p_sea","vis"];
    }

);

separateGroups = true;
