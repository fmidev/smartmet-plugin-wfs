
disabled = false;
demo = false;
supportQCParameters = false;
id = "fmi::observations::weather::mast::multipointcoverage";

expiresSeconds = 60;

constructor_name = "wfs_stored_mast_handler_factory";

title:
{
	eng = "Instantaneous profile observations from masts";
	fin = "Hetkelliset säähavaintoarvot profiilina mastoista";
};

abstract:
{
	eng = "This stored query return instantaneous profile observations from masts in multipointcoverage format. By default latest observation of the available meteo paramters are returned in 10 minute resolution. At least one location has to be given.";
	fin = "Tämä tallennettu kysely palauttaa hetkelliset säähavaintoarvot profiilina mastoista multipointcoverage formaatissa. Oletuksena palautetaan kaikkien suureiden uusimmat havainnot 10 minuutin aikaresoluutiolla. Ainakin yksi paikka on annettava.";
};

template = "weather_observations_mast_multipointcoverage.c2t";

parameters:
(
{
	name = "starttime";
	title =	{ eng = "Begin of the time interval"; fin = "Alkuaika";	};
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z).";  };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "2014-01-01T00:00:00";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide data. Region can be given after location name separated by comma (for example Espoo)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Rovaniemi)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "wmo";
        title = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo."; };
        abstract = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo-koodi."; };
        xmlType = "int";
        type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
}
);

returnTypeNames = [ "omso:ProfileObservation" ];

handler_params:
{
        beginTime = "${starttime: 11 minutes ago rounded down 1 min}";
        endTime = "${endtime: 2 minutes ago rounded down 1 min}";
        places = ["${place}"];
        latlons = [];
        meteoParameters = ["${parameters > defaultMeteoParam}"];
        stationType = "MAST";
        timeStep = "${timestep:10}";
        maxDistance = 50000.0;
        wmos = ["${wmo}"];
        lpnns = [];
        fmisids = ["${fmisid}"];
        geoids = ["${geoid}"];
        numOfStations = "${maxlocations:1}";
        missingText = "NaN";
        boundingBox = "${bbox}";
        maxEpochs = 20000;
        crs = "EPSG:7423";
        keyword_overwritable = false;
	keyword = "";
	producerId = [23];
	qualityInfo = false;
};

named_params = (
     { name = "defaultMeteoParam"; def = ["TA","RH","TD","WS","WD","WG"]; }
);

