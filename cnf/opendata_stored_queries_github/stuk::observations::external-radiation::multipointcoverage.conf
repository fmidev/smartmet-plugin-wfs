
disabled = false;
demo = false;
hidden = false;
supportQCParameters = false;
id = "stuk::observations::external-radiation::multipointcoverage";

expiresSeconds = 600;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Dose rate of external radiation in Finland";
	fin = "Ulkoisen säteilyn annosnopeudet Suomessa";
};

abstract:
{
	eng = "This stored query return the results of the external dose rate measured by the automatic dose rate monitoring stations in Finland. The automatic dose rate monitoring network have about 255 monitoring stations distributed evenly around the Finland.  The monitoring network is maintained by Radiation and Nuclear Safety Authority (STUK). By default, the data is returned from the last 2 hours. The data is returned as a multipointcoverage format. The default values can be overwritten by using the time and location related input parameters.";
	fin = "Tämä tallennettu kysely palauttaa ulkoisen säteilyn annosnopeudet Suomen mittausasemilta. Automaattiset mittausasemat muodostavat valvontaverkon, joka mittaa ulkoisen säteilyn annosnopeutta eripuolilla Suomea. Valvontaverkon koostuu noin 255 mittausasemasta ja sen ylläpidosta vastaa Säteilyturvakeskus (STUK). Oletuksena dataa palautetaan 2 tuntia pyyntöhetkestä taaksepäin. Data palautetaan 'multipointcoverage'-muodossa. Oletusarvot on mahdollista kumota käyttämällä aikaa ja paikkaa koskevia hakuparametreja.";
};

template = "stuk_weather_observations_grid.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "2010-01-01T00:00:00";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide data. Region can be given after location name separated by comma (for example Kumpula,Kolari)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Kumpula,Kolari)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "FMI havaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Ilmatieteen laitoksen määrittelemä havaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Tuloksessa käytettävä projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Tuloksessa käytettävä projektio. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
}
);

returnTypeNames = [ "omso:GridSeriesObservation" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 2 hour ago rounded down 10 min}";
        endTime = "${endtime: now rounded down 10 min}";
        places = ["${place}"];
        latlons = [];
        meteoParameters = ["DR_PT10M_avg","DRS1_PT10M_avg"];
        stationType = "external_radiation";
        timeStep = "${timestep:1}";
        maxDistance = 50000.0;
        wmos = [];
        lpnns = [];
        fmisids = ["${fmisid}"];
        geoids = ["${geoid}"];
        numOfStations = "${maxlocations:1}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${bbox}";
        maxEpochs = 20000;
        crs = "${crs:EPSG::4258}";
        timeZone = "UTC";
        qualityInfo = false;
        keyword_overwritable = true;
	keyword = "stuk_extradiation_fi";
};

named_params = (
    {
        name = "defaultBBox";
        def = "19.1,59.7,31.7,70.1";
    }
);

meteo_parameter_options = (
{
	name = "DR_PT10M_avg";
	precision = 3;
},
{
	name = "DRS1_PT10M_avg";
	precision = 3;
}
);

separateGroups = false;
