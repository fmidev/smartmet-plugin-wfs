disabled = false;
hidden   = false;
demo     = false;
test     = false;
debugLevel = 0;
id       = "fmi::forecast::hirlam::surface::cities::timevaluepair";
expiresSeconds = 21600;

constructor_name = "wfs_forecast_handler_factory";
template = "weather_forecast_timevaluepair.c2t";
returnTypeNames = ["omso:PointTimeSeriesObservation"];
defaultLanguage = "eng";

title:
{
	eng = "Hirlam weather forecast for cities in Finland as time value pairs";
	fin = "Hirlam sääennuste kaupunkeihin aika-arvopareina";
};

abstract:
{
	eng = "This stored query fetch Hirlam weather forecast for cities in Finland. The forcast is returned as time value pairs. By default, forcast is returned for the next 36 hours."; 
	fin = "Tämä tallenettu kysely hakee Hirlam sääennusteen Suomen kaupunkeihin. Sääennuste palautetaan aika-arvopareina. Oletuksena sääennuste palautetaan seuraavalle 36 tunnille.";
};


parameters: (
{
    name     = "starttime";
    title    = {   eng = "Begin of time interval";
                   fin = "Alkuaika";    };
    abstract = {   eng = "The parameter specifies the begin of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z).";
                   fin = "Parametri määrittelee aikajakson alkuajan ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z).";    };
    xmlType  = "xsi:dateTime";
    type     = "time";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name     = "endtime";
    title    = {   eng = "End of time interval";
                   fin = "Loppuaika";    };
    abstract = {   eng = "The parameter specifies the end of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z).";
                   fin = "Parametri määrittelee aikajakson loppuajan ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z).";    };
    xmlType  = "xsi:dateTime";
    type     = "time";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name     = "parameters";
    title    = {   eng = "Parameters to return"; 
                   fin = "Meteorologiset parametrit";   };
    abstract = {   eng = "Comma separated list of meteorological parameters to return. By default, all parameters are returned."; 
                   fin = "Meteorologiset parametrit pilkulla erotettuna. Oletuksena palautetaan kaikki parametrit.";    };
    xmlType  = "gml:NameList";
    type     = "string[0..99]";
    minOccurs = 0;
    maxOccurs = 999;
},
{
    name     = "timestep";
    title    = {   eng = "The time step of data in minutes";
                   fin = "Aika-askel minuutteina";};
    abstract = {   eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. Default timestep is 60 minutes.";
                   fin = "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta. Oletusaika-askel on 60 minuuttia.";};
    xmlType  = "int";
    type     = "uint";
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Datapisteen aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
}
);


named_params = (
{
    name = "defaultMeteoParams";
    def  = ["Temperature", "Pressure", "Humidity", "DewPoint", "RadiationGlobalAccumulation","RadiationLWAccumulation","RadiationNetSurfaceLWAccumulation","RadiationNetSurfaceSWAccumulation","RadiationDiffuseAccumulation" , "CloudSymbol", "WindSpeedMS", "WindDirection", "WindVectorMS", "HourlyMaximumGust", "WindUMS", "WindVMS", "TotalCloudCover", "LowCloudCover", "MediumCloudCover", "HighCloudCover", "MiddleAndLowCloudCover", "Precipitation1h", "PrecipitationForm", "PrecipitationType", "WeatherSymbol3"];
},
{
    name = "empty";
    def  = [];
}
);

handler_params:
{
    beginTime = "${starttime: now}";
    crs       = "EPSG::4258";
    endTime   = "${endtime: after 36 hour}";
    findNearestValid = 0;
    geoids    = [];
    hours     = [];
    keyword_overwritable = false;
	keyword   = "finnish_cities";
    latlons   = [];
    levelHeights = [];
    level     = [];
    levelType = "";
    locale    = "fi_FI.utf8";
    maxDistance = 0;
    missingText = "NaN";
    model     = ["hirlam_eurooppa_pinta"];
    originTime = "${}";
    param     = ["${parameters > defaultMeteoParams}"];
    places    = [];
    times     = [];
    timeStep  = "${timestep: 60}";
    timeSteps = "${}";
    timeZone  = "${timezone: UTC}";
    startStep = "${}";
};

separateGroups = true;
