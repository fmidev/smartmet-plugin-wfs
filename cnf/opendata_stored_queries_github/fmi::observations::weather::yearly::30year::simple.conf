
disabled = false;
hidden = false;
demo = false;

supportQCParameters = false;
id = "fmi::observations::weather::yearly::30year::simple";

expiresSeconds = 31536000;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Yearly weather observations of 30-year normal period";
	fin = "Säähavaintoaineiston vuosikeskiarvot 30-vuoden vertailujaksolta";
};

abstract:
{
	eng = "Yearly Weather Observations of 30-year normal period. By default, the data is returned from the normal period of 1981 - 2010. There is available the following normal periods: 1971 - 2000, 1981 - 2010. Notice that there is only data at the begin of the period. At least one location parameter (geoid/place/fmisid/wmo/bbox) has to be given. The data is returned in simple feature format.";

	fin = "Säähavaintoaineiston vuosikeskiarvot 30-vuoden vertailujaksolta. Oletuksena dataa palautetaan 1981 - 2010 vertailukaudelta. Saatavilla on seuraavat vertailukaudet: 1971 - 2000, 1981 - 2010. Huomaa, että dataa on vain normaalijakson alussa. Vähintään yksi paikanmääre (geoid/place/fmisid/wmo/bbox) on pakollinen. Data palautetaan 'simple feature'-muodossa.";
};

template = "weather_observations_simple.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
        lowerLimit = "1971-01-01T00:00:00Z";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return. By default all parameters will be returned."; fin = "Meteorologiset parametrit pilkulla erotettuna. Oletuksena palautetaan kaikki parametrit.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
}
,{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide forecast. Region can be given after location name separated by comma (for example Hanko)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Hanko)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "wmo";
        title = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo."; };
        abstract = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo-koodi."; };
        xmlType = "int";
        type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Havainnon aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
}
);

returnTypeNames = [ "BsWfs:BsWfsElement" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 1981-01-01T00:00:00Z}";
        endTime = "${endtime: 1981-01-01T00:00:00Z}";
        places = ["${place}"];
        latlons = [];
        meteoParameters = ["${parameters > defaultMeteoParam}"];
        stationType = "opendata_daily";
        timeStep = "${timestep:0}";
        maxDistance = 50000.0;
        wmos = ["${wmo}"];
        lpnns = [];
        fmisids = ["${fmisid}"];
        geoids = ["${geoid}"];
        numOfStations = "${maxlocations:1}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${bbox}";
        maxEpochs = 20000000;
        crs = "${crs:EPSG::4258}";
        timeZone = "${timezone: UTC}";
        qualityInfo = false;
        keyword_overwritable = false;
	keyword = "";
};

maxHours = 788400.0;

named_params = (
    {
        name = "defaultMeteoParam";
        def = ["PAP1Y","TAP1Y","PRAP1Y","RHP1Y","TAMAXP1Y","TAMINP1Y","TA00P1Y","TA06P1Y","TA12P1Y","TA18P1Y","RH00P1Y","RH06P1Y","RH12P1Y","RH18P1Y","NDPR001P1Y","NDPR010P1Y","NDPR100P1Y","NDTAX25P1Y","NDTAX0P1Y","NDTAN0P1Y","NDTAN10P1Y","SUNDP1Y","WSP1Y","WS045P1Y","WS090P1Y","WS135P1Y","WS180P1Y","WS225P1Y","WS270P1Y","WS315P1Y","WS360P1Y","WS0P1Y","WD045P1Y","WD090P1Y","WD135P1Y","WD180P1Y","WD225P1Y","WD270P1Y","WD315P1Y","WD360P1Y","GLOBP1Y"];
    }
);

separateGroups = false;
