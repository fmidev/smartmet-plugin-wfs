disabled = false;
demo = false;

id = "fmi::observations::radiation::timevaluepair";

expiresSeconds = 60;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Sun Radiation Observations";
	fin = "Auringon säteilyhavaintoaineisto: auringon säteilyn minuuttiarvot.";
};

abstract:
{
	eng = "Sun radiation observations from weather stations. By default the data is returned from last 1 hour and from stations in Sodankylä, Jokioinen, Helsinki, Parainen, Vantaa, Jyväskylä, Sotkamo and Utsjoki. The data is returned in 'timevaluepair' format.";

	fin = "Säteilyhavainnot Suomen havaintoasemilta. Oletuksena dataa palautetaan 1 tunti pyyntöhetkestä taaksepäin ja kuntien Sodankylä, Jokioinen, Helsinki, Parainen, Vantaa, Jyväskylä, Sotkamo ja Utsjoki mittausasemilta. Data palautetaan 'timevaluepair'-muodossa.";
};

template = "weather_observations_timevaluepair.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "2012-01-01T00:00:00";
},

{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
},
# ,
# {
# 	name = "bbox";
# 	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
# 	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
# 	xmlType = "xsi:string";
# 	type = "bbox";
# 	minOccurs = 0;
# 	maxOccurs = 1;
# },
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Havainnon aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
/*},
{
        name     = "qualityinfo";
        title    = { eng = "Quality info"; fin = "Laatutieto"; };
        abstract = { eng = "Quality info will be included into result if the value is 'true' Default value is 'false'";
                     fin = "Laatutieto sisällytetään vastaukseen, jos parametrin arvo on 'true' Oletusarvo on 'false'"; };
        xmlType  = "xsi:boolean";
        type     = "bool";
*/}
);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 1 hour ago rounded down 1 min}";
        endTime = "${endtime: now rounded down 1 min}";
        places = []; # ["${?place}"];
        latlons = [];
        meteoParameters = ["${parameters > defaultMeteoParam}"];
        stationType = "opendata_minute";
        timeStep = "${timestep:0}";
        maxDistance = 50000.0;
        wmos = [];
        lpnns = [];
        fmisids = ["${fmisid > defaultSids}"];
        geoids = [];
        numOfStations = "${maxlocations:0}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${}";
        maxEpochs = 2000;
        crs = "${crs:EPSG::4258}";
        timeZone = "${timezone: UTC}";
        qualityInfo = false;
        keyword_overwritable = false;
	keyword = "";
};

named_params = (
    {
	name = "defaultSids";
	def = [101932, 101104, 101004, 100908, 100968, 101339, 101756, 102035];
    },
    {
        name = "defaultMeteoParam";
        def = ["LWIN_1MIN", "LWOUT_1MIN", "GLOB_1MIN", "DIR_1MIN", "REFL_1MIN", "SUND_1MIN", "DIFF_1MIN", "NET_1MIN", "UVB_U"];
    },
    {	
    	name = "intent";
	def = ["radiation", "http://inspire.ec.europa.eu/codeList/ProcessParameterValue/value/groundObservation/observationIntent"];
    }

);

separateGroups = true;
