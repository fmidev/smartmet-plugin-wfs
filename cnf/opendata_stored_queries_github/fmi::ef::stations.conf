
disabled = true;
demo = false;
hidden = true;

id = "fmi::ef::stations";

expiresSeconds = 1;

constructor_name = "wfs_stored_env_monitoring_facility_handler_factory";

title:
{
	eng = "Environmental Monitoring Facilities";
	fin = "Ympäristön monitorointilaitteistot";
};

abstract:
{
	eng = "Environmental Monitoring Facilities abstract";

	fin = "Ympäristön monitorointilaitteistot abstrakti";
};

template = "env_monitoring_facility.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "1700-01-01T00:00:00";},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "networkid";
	title = { eng = "Network identifier"; fin = "Verkon id.";  };
	abstract = { eng = "Identifier of the observation network."; fin = "Havaintoasemaverkon id."; };
	xmlType = "xsi:int";
	type = "int";
	minOccurs = 0;
	maxOccurs = 1;
},
{
	name = "fmisid";
	title = { eng = "Station identifier"; fin = "Aseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Havaintoaseman id."; };
	xmlType = "xsi:int";
	type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "stationname";
	title = { eng = "Station name"; fin = "Aseman nimi.";  };
	abstract = { eng = "Name of the observation station."; fin = "Havaintoaseman nimi."; };
	xmlType = "xsi:string";
	type = "string";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "aggregatefunction";
	title = { eng = "Aggregate function"; fin = "Kertymäfunktio";  };
	abstract = { eng = "Aggregate function"; fin = "Kertymäfunktio"; };
	xmlType = "NameList";
	type = "string[0..99]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "aggregateperiod";
	title = { eng = "Aggregate period"; fin = "Kertymäperiodi";  };
	abstract = { eng = "Aggregate period"; fin = "Kertymäperiodi"; };
	xmlType = "NameList";
	type = "string[0..99]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "basephenomenon";
	title = { eng = "Base phenomenon"; fin = "Perussuure"; };
	abstract = { eng = "Comma separated list of base phenomenons (for example T,WSD)."; fin = "Perussuureet pilkulla erotettuna (esimerkiksi Lämpötila,Ilmanpaine).";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "measurandcode";
	title = { eng = "Measurand code"; fin = "Suurekoodi"; };
	abstract = { eng = "Comma separated list of measurand codes (for example SUND, CLOB, DIFF ,WAWA)."; fin = "Suurekoodit pilkulla erotettuna (esimerkiksi SUND,CLOB,DIFF,WAWA).";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "storageid";
	title = { eng = "Storage id"; fin = "Datavaraston id.";  };
	abstract = { eng = "Identifier of the observation storage."; fin = "Datavaraston identiteetti."; };
	xmlType = "xsi:int";
	type = "int";
	minOccurs = 0;
	maxOccurs = 3;
}
);

returnTypeNames = [ "ef:EnvironmentalMonitoringFacility" ];

handler_params:
{
        beginTime = "${starttime: 24 hours ago rounded down 60 min}";
        endTime = "${endtime: now rounded down 1 min}";
        networkClassId = [];
        networkId = ["${networkid}"];
        stationId = ["${fmisid}"];
        stationName = ["${stationname}"];
	basePhenomenon = ["${basephenomenon > empty}"];
        aggregateFunction = ["${aggregatefunction > empty}"];
        aggregatePeriod = ["${aggregateperiod > empty}"];
	measurandCode = ["${measurandcode > empty}"];
	missingText = "NaN";
	storageId = ["${storageid > defaultStorageId}"];
	inspireNamespace = "http://xml.fmi.fi/namespace/identifier/station/inspire";
	authorityDomain = "http://xml.fmi.fi";
};

named_params = (
    {
        name = "empty";
        def = [];
    },
    {
        name = "defaultStorageId";
        def = [462, 482, 483];
    }
);
