

disabled = false;
demo = false;

id = "fmi::observations::seaice::manual::timevaluepair";

expiresSeconds = 3600;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "Manual Sea Ice Observations";
	fin = "Manuaaliset merijäähavainnot";
};

abstract:
{
	eng = "Manually made sea ice observations from The Baltic Sea. By default, the data is returned from last 30 days.  At least one location parameter (geoid/place/fmisid/wmo/bbox/latlon) has to be given. The data is returned as a time value pair format.";

	fin = "Manuaalisesti tehdyt merijäähavainnot Itämereltä. Oletuksena havaintoja palautetaan 30 päivää pyyntöhetkestä taaksepäin. Vähintään yksi paikanmääre (geoid/place/fmisid/wmo/bbox/latlon) on pakollinen. Data palautetaan 'timevaluepair'-muodossa.";
};

template = "weather_observations_timevaluepair.c2t";

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
	lowerLimit = "1900-01-01T00:00:00";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
}
,{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 0;
	maxOccurs = 1;
},
{
        name = "place";
        title = { eng = "The location for which to provide data"; fin = "Paikannimi"; };
        abstract = { eng = "The location for which to provide data. Region can be given after location name separated by comma (for example Kumpula,Kolari)."; fin = "Paikannimi. Alueen voi antaa paikannimen jälkeen pilkulla erotettuna (esim. Kumpula,Kolari)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
},
{
	name = "fmisid";
	title = { eng = "FMI observation station identifier."; fin = "Säähavaintoaseman id.";  };
	abstract = { eng = "Identifier of the observation station."; fin = "Säähavaintoaseman id."; };
	xmlType = "int";
	type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "maxlocations";
        title = { eng = "Amount of locations"; fin = "Haettujen paikkojen määrä"; };
        abstract = { eng = "How many observation stations are fetched around queried locations. Note that stations are only searched with 50 kilometers radius around the location."; fin = "Etsittävien havaintoasemien määrä kunkin paikan läheisyydestä. Havaintoasemia etsitään maksimissaan 50 kilometrin säteellä paikoista."; };
        xmlType = "int";
        type = "uint";
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "wmo";
        title = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo."; };
        abstract = { eng = "WMO code of the location for which to return data."; fin = "Haettavan paikan wmo-koodi."; };
        xmlType = "int";
        type = "uint";
	minOccurs = 0;
	maxOccurs = 99;
},
{
	name = "latlon";
	title = { eng = "Location coordinates to return data."; fin = "Paikan koordinaatit";  };
	abstract = { eng = "Location coordinates to return data  (lat,lon). For example 63.890,22.943"; fin = "Paikan koordinaatit (lat,lon). Esimerkiksi 63.890,22.943"; };
	xmlType = "gml:pos";
	type = "double[2]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name     = "timezone";
        title    = { eng = "Time zone"; fin = "Aikavyöhyke"; };
        abstract = { eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
                     fin = "Havainnon aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC."; };
        xmlType  = "xsi:string";
        type     = "string";
/*},
{
        name     = "qualityinfo";
        title    = { eng = "Quality info"; fin = "Laatutieto"; };
        abstract = { eng = "Quality info will be included into result if the value is 'true' Default value is 'false'";
                     fin = "Laatutieto sisällytetään vastaukseen, jos parametrin arvo on 'true' Oletusarvo on 'false'"; };
        xmlType  = "xsi:boolean";
        type     = "bool";
*/}
);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
        latest = false;
	beginTime = "${starttime: 7 days ago rounded down 1 min}";
        endTime = "${endtime: now rounded down 60 min}";
        places = ["${place}"];
        latlons = ["${latlon}"];
        meteoParameters = ["${parameters > defaultMeteoParam}"];
        stationType = "sea_ice_manual";
        timeStep = "${timestep:0}";
        maxDistance = 50000.0;
        wmos = ["${wmo}"];
        lpnns = [];
        fmisids = ["${fmisid}"];
        geoids = ["${geoid}"];
        numOfStations = "${maxlocations:1}";
        hours = [];
        weekDays = [];
        locale = "fi_FI.utf8";
        missingText = "NaN";
        boundingBox = "${bbox}";
        maxEpochs = 20000;
        crs = "${crs:EPSG::4258}";
        timeZone = "${timezone: UTC}";
        qualityInfo = false;
        keyword_overwritable = false;
	keyword = "";
};

named_params = (
    {
        name = "defaultMeteoParam";
        def = ["ICE_PT1S_INSTANT", "SNDICE_PT1M_AVG"];
    }
);

maxHours = 87600.0;
separateGroups = true;
