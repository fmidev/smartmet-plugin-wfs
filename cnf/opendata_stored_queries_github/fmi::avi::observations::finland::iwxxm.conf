
disabled = false;
demo = false;

id = "fmi::avi::observations::finland::iwxxm";

expiresSeconds = 1;

constructor_name = "wfs_stored_aviation_observation_handler_factory";

title:
{
	eng = "Aviation weather from aerodromes in Finland";
	fin = "Lentosää Suomen lentopaikoilta";
};

abstract:
{
	eng = "This stored query return aviation weather messages from the essential aerodromes in Finland (predefined aerodrome set). Each message is constructed from a METAR weather report and converted to IWXXM (ICAO Meteorological Information Exchange Model) format. By default, the data is returned from the last 60 minutes. One can change the time range by using starttime and endtime parameters. It is also possible to request additional aerodromes which are included into the predefined aerodrome set by using icaocode parameter (duplicates are iqnored).";
	fin = "Tämä tallennettu kysely palauttaa lentosääviestejä Suomen tärkeimmiltä lentopaikoilta (ennaltamäärätty lentopaikkajoukko). Yksittäinen viesti on muodostetaan METAR sanomasta IWXXM muotoon. Oletuksena dataa palautetaan 60 minuuttia pyyntöhetkestä taaksepäin. Aikajaksoa on mahdollista muuttaa käyttämällä hakuparametreja starttime ja endtime. Ennaltamäärättyyn lentopaikkajoukkoon voidaan lisäksi liittää muita lentopaikkoja käyttämällä icaocode parameteria (duplikaatteja ei liitetä tulokseen).";
};

template = "aviation_observations.c2t";

parameters:
(
{
        name = "starttime";
        title = {eng = "Begin of time interval"; fin = "Alkuaika"; };
        abstract = { eng = "Parameter specifies the begin of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z)."; };
        xmlType = "xsi:dateTime";
        type = "time";
        lowerLimit = "2010-01-01T00:00:00";
},
{
        name = "endtime";
        title = { eng = "End of time interval"; fin = "Loppuaika"; };
        abstract = { eng = "Parameter specifies the end of time interval in ISO 8601 format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO 8601 muodossa (esim. 2012-02-27T00:00:00Z)."; };
        xmlType = "xsi:dateTime";
        type = "time";
},
{
        name = "icaocode";
        title = { eng = "ICAO Code"; fin = "ICAO tunnus"; };
        abstract = {  eng = "Four-character alphanumeric code designating each airport around the world. (for example EFHK)."; fin = "Lentopaikalle määrittävä neljäkirjaiminen kansainvälinen tunnus (esim. EFHK)."; };
        xmlType = "xsi:string";
        type = "string";
        minOccurs = 0;
        maxOccurs = 99;
}
);

returnTypeNames = [ "avi:VerifiableMessage" ];

handler_params:
{
	icaoCode = ["${icaocode > empty}"];
	beginTime = "${starttime: 1 hour ago rounded down 1 min}";
	endTime = "${endtime: now rounded down 1 min}";
	places = [];
	latlons = [];
	geoids = [];
	boundingBox = "${}";
	maxDistance = 50000.0;
	keyword_overwritable = false;
	keyword = "finavia";
	stationType = "finavia";
	returnOnlyLatest = "false";
};

named_params = (
    {
        name = "empty";
        def = [];
    }
);
