{
	"constructors" : 
	{
		"wfs_coverage_query_handler_factory" : 
		{
			"description" : "Forecast data: areas as GML isobars",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "The coordinate projection used in the response",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"hours" : 
				{
					"description" : "requested times expressed in the list of hours (for example \u201c12,13,18,19\u201d)",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"limits" : 
				{
					"description" : "An array of comma separated value ranges which are used in the contours. The value ranges are expressed as comma separated value pairs. For example, two ranges: from 1.05 to 3 and from 4 to 7.85 would be expressed with an array [1.05,3,4,7.85].",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"originTime" : 
				{
					"description" : "The origin time of the weather models that should be used. This might be omitted in the query",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"producer" : 
				{
					"description" : "An array of the data producer names",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"startStep" : 
				{
					"description" : "The index number of the first selected time step since the start time.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeStep" : 
				{
					"description" : "The time interval between the requested records expressed in minutes.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeSteps" : 
				{
					"description" : "The number of the requested time steps (= number of data records).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeZone" : 
				{
					"description" : "The time zone used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"times" : 
				{
					"description" : "The requested times expressed in the list of hours and minutes HHMM (for example \u201c1200,1230,1300,1330\u201d).",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::forecast::ecmwf::surface::coverage::wind",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "coverage_countours.c2t"
				}
			]
		},
		"wfs_flash_handler_factory" : 
		{
			"description" : "Observation data: Lightning",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "Specifies the coordinate projection. For example crs = \"${crs:EPSG::4326}\" maps to request parameter crs with the default value EPSG::4326.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"meteoParameters" : 
				{
					"description" : "An array of fields whose values should be returned in the response.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 999,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"timeZone" : 
				{
					"description" : "The time zone used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::observations::lightning::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "lightning_multipointcoverage.c2t"
				},
				{
					"name" : "fmi::observations::lightning::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "lightning_simple.c2t"
				}
			]
		},
		"wfs_forecast_handler_factory" : 
		{
			"description" : "Forecast data (general)",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"crs" : 
				{
					"description" : "The coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"findNearestValid" : 
				{
					"description" : "A non zero value of this parameters causes look-up of the nearest point from the model.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "long"
				},
				"fmisids" : 
				{
					"description" : "The geographical location(s) expressed by an array of fmisids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"hours" : 
				{
					"description" : "requested times expressed in the list of hours (for example \u201c12,13,18,19\u201d)",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"keyword" : 
				{
					"description" : "The geographical location(s) expressed by an array of keywords",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"keyword_overwritable" : 
				{
					"description" : "The default values listed in the \"keyword\" parameter can be overwritten by using the location related input parameters only if the value of this parameter is \"true\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"level" : 
				{
					"description" : "An array of geometric heights (GeomHeight) above the topography of model. An empty array means that all the levels can be used. The parameter is usable only with hybrid data and interpolated data values will be returned if exact match is not found. The use of parameter also require that the dataset contains e.g. GeomHeight data and it is not allowed to use with the level parameter at the same time.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 99,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"levelHeights" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 99,
					"min_size" : 0,
					"step" : 1,
					"type" : "double"
				},
				"levelType" : 
				{
					"description" : "The level type that can be used in the query.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"locale" : 
				{
					"description" : "Locale to use in response",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"lpnns" : 
				{
					"description" : "The geographical location(s) expressed by an array of LPNNs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"missingText" : 
				{
					"description" : "The value that is returned when the value of the requested field is missing.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"model" : 
				{
					"description" : "An array of weather models (see QEngine configuration) that can be used in the query. An empty array means that all the available weather models can be used.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"originTime" : 
				{
					"description" : "The origin time of the weather models that should be used. This might be omitted in the query.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"param" : 
				{
					"description" : "An array of fields which values should be returned in the response.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 99,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"startStep" : 
				{
					"description" : "The index number of the first selected time step since the start time.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeStep" : 
				{
					"description" : "The time interval between the requested records expressed in minutes.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeSteps" : 
				{
					"description" : "The number of the requested time steps (= number of data records).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeZone" : 
				{
					"description" : "The time zone used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"times" : 
				{
					"description" : "The requested times expressed in the list of hours and minutes HHMM (for example \u201c1200,1230,1300,1330\u201d).",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"wmos" : 
				{
					"description" : "The geographical location(s) expressed by an array of WMOs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::forecast::hbm::point::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::hbm::point::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::hbm::point::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::cities::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::cities::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::cities::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::obsstations::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::obsstations::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::obsstations::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::point::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::point::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::point::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				},
				{
					"name" : "fmi::forecast::oaas::sealevel::point::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::oaas::sealevel::point::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::oaas::sealevel::point::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				},
				{
					"name" : "fmi::forecast::wam::point::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_forecast_grid.c2t"
				},
				{
					"name" : "fmi::forecast::wam::point::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_forecast_simple.c2t"
				},
				{
					"name" : "fmi::forecast::wam::point::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_forecast_timevaluepair.c2t"
				}
			]
		},
		"wfs_get_data_set_by_id_handler_factory" : 
		{
			"description" : "Predefined data sets",
			"parameters" : 
			{
				"datasetid" : 
				{
					"description" : "An array of DataSetDef structures. These structures are needed for mapping the data set identifiers to the stored queries.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "GetDataSetById",
					"return_types" : [],
					"template_name" : null
				}
			]
		},
		"wfs_get_feature_by_id_handler_factory" : 
		{
			"description" : "The mandatory implementation of the \"GetFeatureById\" stored query defined in the WFS 2.0 standard",
			"parameters" : 
			{
				"feature_id" : 
				{
					"description" : "The feature identifier of the requested feature.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "urn:ogc:def:query:OGC-WFS::GetFeatureById",
					"return_types" : [],
					"template_name" : null
				}
			]
		},
		"wfs_obs_handler_factory" : 
		{
			"description" : "Observation data (general, no lightning, aviation or multi-sensor)",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "posix_time"
				},
				"fmisids" : 
				{
					"description" : "The geographical location(s) expressed by an array of fmisids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"hours" : 
				{
					"description" : "requested times expressed in the list of hours (for example \u201c12,13,18,19\u201d)",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"keyword" : 
				{
					"description" : "The geographical location(s) expressed by an array of keywords",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"keyword_overwritable" : 
				{
					"description" : "The default values listed in the \"keyword\" parameter can be overwritten by using the location related input parameters only if the value of this parameter is \"true\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"language" : 
				{
					"description" : "The language to use",
					"is_array" : false,
					"mandatory" : false,
					"type" : "string"
				},
				"latest" : 
				{
					"description" : "",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"locale" : 
				{
					"description" : "value of the 'Locale' (for example fi_FI.utf8).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"lpnns" : 
				{
					"description" : "The geographical location(s) expressed by an array of LPNNs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"maxEpochs" : 
				{
					"description" : "maximum number of time epochs that can be returned. If the estimated number before query is larger than the specified one then the query is aborted. This parameter is not alid if the \"storedQueryRestrictions\" parameter is set to \"false\" in the WFS Plugin configuration file.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"meteoParameters" : 
				{
					"description" : "array of fields whose values should be returned in the response.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 65535,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"missingText" : 
				{
					"description" : "value that is returned when the value of the requested field is missing.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"numOfStations" : 
				{
					"description" : "The maximum number of the observation stations returned around the given geographical location (inside the radius of \"maxDistance\")",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"qualityInfo" : 
				{
					"description" : "quality code information of the measured values will be included in the response if the parameter value is \"on\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"startStep" : 
				{
					"description" : "The index number of the first selected time step since the start time.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"stationType" : 
				{
					"description" : "The type of the observation station (defined in the ObsEngine configuration)",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"timeStep" : 
				{
					"description" : "The time interval between the requested records expressed in minutes.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeSteps" : 
				{
					"description" : "The number of the requested time steps (= number of data records).",
					"is_array" : false,
					"mandatory" : false,
					"type" : "unsigned long"
				},
				"timeZone" : 
				{
					"description" : "The time zone used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"times" : 
				{
					"description" : "The requested times expressed in the list of hours and minutes HHMM (for example \u201c1200,1230,1300,1330\u201d).",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"weekDays" : 
				{
					"description" : "requested times expressed in the list of weekdays",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"wmos" : 
				{
					"description" : "The geographical location(s) expressed by an array of WMOs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::datasets::observations::weather::daily::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::datasets::observations::weather::monthly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::datasets::observations::weather::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::datasets::observations::weather::yearly::30year::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::airquality::hourly::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::airquality::hourly::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::airquality::hourly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::magnetometer::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::daily::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations2_grid.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::daily::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::daily::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair2.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::instant::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations2_grid.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::instant::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::instant::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair2.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::monthly::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations2_grid.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::monthly::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::monthly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair2.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations2_grid.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::mareograph::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair2.c2t"
				},
				{
					"name" : "fmi::observations::radiation::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::radiation::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::radiation::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::soil::hourly::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::soil::hourly::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::soil::hourly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::wave::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::wave::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::wave::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::cities::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::cities::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::cities::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::daily::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::daily::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::daily::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::30year::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::30year::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::30year::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "fmi::observations::weather::yearly::30year::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "fmi::observations::weather::yearly::30year::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "fmi::observations::weather::yearly::30year::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "livi::observations::road::default::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "livi::observations::road::default::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "livi::observations::road::default::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "livi::observations::road::finland::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "livi::observations::road::finland::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "livi::observations::road::finland::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "livi::observations::road::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "livi::observations::road::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "livi::observations::road::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				},
				{
					"name" : "stuk::observations::external-radiation::latest::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "stuk_weather_observations_grid.c2t"
				},
				{
					"name" : "stuk::observations::external-radiation::latest::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "stuk::observations::external-radiation::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "stuk_weather_observations_grid.c2t"
				},
				{
					"name" : "urban::observations::airquality::hourly::multipointcoverage",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "weather_observations_grid.c2t"
				},
				{
					"name" : "urban::observations::airquality::hourly::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "weather_observations_simple.c2t"
				},
				{
					"name" : "urban::observations::airquality::hourly::timevaluepair",
					"return_types" : 
					[
						"omso:PointTimeSeriesObservation"
					],
					"template" : "weather_observations_timevaluepair.c2t"
				}
			]
		},
		"wfs_stored_air_nuclide_handler_factory" : 
		{
			"description" : "",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "The coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"fmisids" : 
				{
					"description" : "The geographical location(s) expressed by an array of fmisids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"keyword" : 
				{
					"description" : "The geographical location(s) expressed by an array of keywords",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"keyword_overwritable" : 
				{
					"description" : "The default values listed in the \"keyword\" parameter can be overwritten by using the location related input parameters only if the value of this parameter is \"true\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latest" : 
				{
					"description" : "The attribute indicates whether to return only the latest values from the stations or all.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"nuclideCodes" : 
				{
					"description" : "An array of nuclide codes. If at least one listed nuclide code match the nuclide code in the analysis, the analysis will be included into the result.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"numOfStations" : 
				{
					"description" : "The maximum number of the observation stations returned around thegiven geographical location (inside the radius of \"maxDistance\").",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"qualityInfo" : 
				{
					"description" : "quality code information of the measured values will be included in the response if the parameter value is \"on\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"stationType" : 
				{
					"description" : "The observation station type.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"timeStep" : 
				{
					"description" : "The time interval between the requested records expressed in minutes.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"wmos" : 
				{
					"description" : "The geographical location(s) expressed by an array of WMOs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "stuk::observations::air::radionuclide-activity-concentration::latest::multipointcoverage",
					"return_types" : 
					[
						"omso:PointObservation"
					],
					"template" : "air_radionuclide_concentration_multipointcoverage.c2t"
				},
				{
					"name" : "stuk::observations::air::radionuclide-activity-concentration::latest::simple",
					"return_types" : 
					[
						"BsWfs:BsWfsElement"
					],
					"template" : "air_radionuclide_concentration_simple.c2t"
				},
				{
					"name" : "stuk::observations::air::radionuclide-activity-concentration::multipointcoverage",
					"return_types" : 
					[
						"omso:PointObservation"
					],
					"template" : "air_radionuclide_concentration_multipointcoverage.c2t"
				}
			]
		},
		"wfs_stored_atom_handler_base_factory" : 
		{
			"description" : "StoredAtomQueryHandlerBase",
			"parameters" : {},
			"stored_queries" : 
			[
				{
					"name" : "DownloadQueryDemo",
					"return_types" : 
					[
						"testType"
					],
					"template" : "_download_query_demo.c2t"
				}
			]
		},
		"wfs_stored_aviation_observation_handler_factory" : 
		{
			"description" : "Observation data: Aviation",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"icaoCode" : 
				{
					"description" : "An array of ICAO identifiers. The ICAO identifier is a four-character alphanumeric code designating each airport around the world.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"keyword" : 
				{
					"description" : "The geographical location(s) expressed by an array of keywords",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"keyword_overwritable" : 
				{
					"description" : "The default values listed in the \"keyword\" parameter can be overwritten by using the location related input parameters only if the value of this parameter is \"true\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"returnOnlyLatest" : 
				{
					"description" : "The attribute indicates whether to return only the latest values from the stations or all.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "string"
				},
				"stationType" : 
				{
					"description" : "",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::avi::observations::finland::iwxxm",
					"return_types" : 
					[
						"avi:VerifiableMessage"
					],
					"template" : "aviation_observations.c2t"
				},
				{
					"name" : "fmi::avi::observations::finland::latest::iwxxm",
					"return_types" : 
					[
						"avi:VerifiableMessage"
					],
					"template" : "aviation_observations.c2t"
				},
				{
					"name" : "fmi::avi::observations::iwxxm",
					"return_types" : 
					[
						"avi:VerifiableMessage"
					],
					"template" : "aviation_observations.c2t"
				},
				{
					"name" : "fmi::avi::observations::latest::iwxxm",
					"return_types" : 
					[
						"avi:VerifiableMessage"
					],
					"template" : "aviation_observations.c2t"
				}
			]
		},
		"wfs_stored_file_handler_factory" : 
		{
			"description" : "Forecast data: download in querydata format",
			"parameters" : 
			{
				"bbox" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 4,
					"min_size" : 0,
					"step" : 4,
					"type" : "double"
				},
				"beginTime" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "posix_time"
				},
				"endTime" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "posix_time"
				},
				"levels" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"name" : 
				{
					"description" : "",
					"is_array" : false,
					"mandatory" : false,
					"type" : "string"
				},
				"params" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "FileDownloadDemo",
					"return_types" : 
					[
						"testType"
					],
					"template" : "FileDownloadDemo.c2t"
				}
			]
		},
		"wfs_stored_geoserver_handler_factory" : 
		{
			"description" : "Geographical data downloading",
			"parameters" : 
			{
				"begin" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "The coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"elevationSelect" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 2147483647,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"end" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"height" : 
				{
					"description" : "The height of the returned image.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"layers" : 
				{
					"description" : "An array of layer names used for the image.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 999,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"width" : 
				{
					"description" : "The width of the returned image.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "GeoserverQueryDemo",
					"return_types" : 
					[
						"testType"
					],
					"template" : "_geoserver_query_demo.c2t"
				},
				{
					"name" : "fmi::obs::radar::hclass::1",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::composite::dbz",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::composite::rr",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::composite::rr12h",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::composite::rr1h",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::composite::rr24h",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::single::dbz",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::single::etop_20",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::single::hclass",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				},
				{
					"name" : "fmi::radar::single::vrad",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "radar.c2t"
				}
			]
		},
		"wfs_stored_mast_handler_factory" : 
		{
			"description" : "Observation data: Multi-sensor",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "The coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"fmisids" : 
				{
					"description" : "The geographical location(s) expressed by an array of fmisids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"maxEpochs" : 
				{
					"description" : "The maximum number of time epochs to return.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"meteoParameters" : 
				{
					"description" : "An array of fields whose values should be returned in the response. Available data fields depend on the value of the \"stationType\" attribute.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 65535,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"missingText" : 
				{
					"description" : "The value that is returned when the value of the requested field is missing.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"numOfStations" : 
				{
					"description" : "The maximum number of the observation stations returned around the given geographical location (inside the radius of \"maxDistance\").",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"producerId" : 
				{
					"description" : "Producer id values are found for example from PRODUCERS_V1 Oracle database view.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"qualityInfo" : 
				{
					"description" : "quality code information of the measured values will be included in the response if the parameter value is \"on\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"stationType" : 
				{
					"description" : "The type of the observation station (defined in the ObsEngine configuration).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"timeStep" : 
				{
					"description" : "The time interval between the requested data (observations).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"wmos" : 
				{
					"description" : "The geographical location(s) expressed by an array of WMOs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::observations::weather::mast::multipointcoverage",
					"return_types" : 
					[
						"omso:ProfileObservation"
					],
					"template" : "weather_observations_mast_multipointcoverage.c2t"
				}
			]
		},
		"wfs_stored_qe_download_handler_factory" : 
		{
			"description" : "Forecast data: download when data source is QEngine",
			"parameters" : 
			{
				"beginTime" : 
				{
					"description" : "The start time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"endTime" : 
				{
					"description" : "The end time of the requested time period (YYYY-MM-DDTHHMIZ).",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "posix_time"
				},
				"format" : 
				{
					"description" : "The format used in the response. The default value is \"grib2\".",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"fullInterval" : 
				{
					"description" : "If non zero then the full specified time interval must be present in the model data for the model to be used. Otherwise the overlapping is sufficient.",
					"is_array" : false,
					"mandatory" : false,
					"type" : "long"
				},
				"levelType" : 
				{
					"description" : "An array of level types used in the query.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"levelValue" : 
				{
					"description" : "An array of the model levels that can be used in the query. An empty array means that all the levels can be used.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "double"
				},
				"meteoParam" : 
				{
					"description" : "An array of fields whose values should be returned in the response.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"originTime" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "posix_time"
				},
				"producer" : 
				{
					"description" : "An array of supported formats. The default value is \"grib2,grib1,netcdf\"). The \"grib2\" format is supported even if it is not defined at the array.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"projection" : 
				{
					"description" : "The coordinate projection used in the response.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 1,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::forecast::climatology::scenario::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::hbm::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::helmi::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::pressure::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::finland::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::hirlam::surface::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::forecast::wam::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::observations::weather::monthly::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				},
				{
					"name" : "fmi::transportmodel::hilatar::surface::scandinavia::grid",
					"return_types" : 
					[
						"omso:GridSeriesObservation"
					],
					"template" : "for_grid_ground.c2t"
				}
			]
		},
		"wfs_stored_sounding_handler_factory" : 
		{
			"description" : "",
			"parameters" : 
			{
				"altitudeRanges" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 2,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"beginTime" : 
				{
					"description" : "start time of the requested time period",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"boundingBox" : 
				{
					"description" : "The geographical location / area expressed by the bounding box coordinates",
					"is_array" : false,
					"mandatory" : false,
					"type" : "bounding_box"
				},
				"crs" : 
				{
					"description" : "coordinate projection used in the response.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"endTime" : 
				{
					"description" : "end time of the requested time period",
					"is_array" : false,
					"mandatory" : true,
					"type" : "posix_time"
				},
				"fmisids" : 
				{
					"description" : "The geographical location(s) expressed by an array of fmisids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"geoids" : 
				{
					"description" : "The geographical location(s) expressed by an array of geoids",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				},
				"keyword" : 
				{
					"description" : "The geographical location(s) expressed by an array of keywords",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"keyword_overwritable" : 
				{
					"description" : "The default values listed in the \"keyword\" parameter can be overwritten by using the location related input parameters only if the value of this parameter is \"true\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latest" : 
				{
					"description" : "",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"latlons" : 
				{
					"description" : "The geographical location(s) expressed by an array of latitude-longitude pairs.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 999,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"maxDistance" : 
				{
					"description" : "The maximum data search distance from the given geographical location(s).",
					"is_array" : false,
					"mandatory" : true,
					"type" : "double"
				},
				"meteoParameters" : 
				{
					"description" : "array of fields whose values should be returned in the response.",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 65535,
					"min_size" : 1,
					"step" : 1,
					"type" : "string"
				},
				"missingText" : 
				{
					"description" : "value that is returned when the value of the requested numeric field is missing.",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"numOfStations" : 
				{
					"description" : "The maximum number of the observation stations returned around the given geographical location (inside the radius of \"maxDistance\")",
					"is_array" : false,
					"mandatory" : true,
					"type" : "unsigned long"
				},
				"places" : 
				{
					"description" : "The geographical location(s) expressed by an array of location names.",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "string"
				},
				"pressureRages" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 2,
					"min_size" : 0,
					"step" : 2,
					"type" : "double"
				},
				"publicity" : 
				{
					"description" : "",
					"is_array" : true,
					"mandatory" : true,
					"max_size" : 65535,
					"min_size" : 1,
					"step" : 1,
					"type" : "unsigned long"
				},
				"qualityInfo" : 
				{
					"description" : "quality code information of the measured values will be included in the response if the parameter value is \"on\".",
					"is_array" : false,
					"mandatory" : true,
					"type" : "bool"
				},
				"soundingType" : 
				{
					"description" : "Sounding type. Types 1, 2, 3 are supported. Type 1 is no more in use",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "unsigned long"
				},
				"stationType" : 
				{
					"description" : "The type of the observation station (defined in the ObsEngine configuration)",
					"is_array" : false,
					"mandatory" : true,
					"type" : "string"
				},
				"wmos" : 
				{
					"description" : "The geographical location(s) expressed by an array of WMOs",
					"is_array" : true,
					"mandatory" : false,
					"max_size" : 65535,
					"min_size" : 0,
					"step" : 1,
					"type" : "long"
				}
			},
			"stored_queries" : 
			[
				{
					"name" : "fmi::observations::weather::sounding::multipointcoverage",
					"return_types" : 
					[
						"omso:TrajectoryObservation"
					],
					"template" : "weather_observations_soundings_multipointcoverage.c2t"
				}
			]
		}
	},
	"templates" : 
	{
		"FileDownloadDemo.c2t" : 
		[
			"testType"
		],
		"_download_query_demo.c2t" : 
		[
			"testType"
		],
		"_geoserver_query_demo.c2t" : 
		[
			"testType"
		],
		"air_radionuclide_concentration_multipointcoverage.c2t" : 
		[
			"omso:PointObservation"
		],
		"air_radionuclide_concentration_simple.c2t" : 
		[
			"BsWfs:BsWfsElement"
		],
		"aviation_observations.c2t" : 
		[
			"avi:VerifiableMessage"
		],
		"coverage_countours.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"for_grid_ground.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"lightning_multipointcoverage.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"lightning_simple.c2t" : 
		[
			"BsWfs:BsWfsElement"
		],
		"radar.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"stuk_weather_observations_grid.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"weather_forecast_grid.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"weather_forecast_simple.c2t" : 
		[
			"BsWfs:BsWfsElement"
		],
		"weather_forecast_timevaluepair.c2t" : 
		[
			"omso:PointTimeSeriesObservation"
		],
		"weather_observations2_grid.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"weather_observations_grid.c2t" : 
		[
			"omso:GridSeriesObservation"
		],
		"weather_observations_mast_multipointcoverage.c2t" : 
		[
			"omso:ProfileObservation"
		],
		"weather_observations_simple.c2t" : 
		[
			"BsWfs:BsWfsElement"
		],
		"weather_observations_soundings_multipointcoverage.c2t" : 
		[
			"omso:TrajectoryObservation"
		],
		"weather_observations_timevaluepair.c2t" : 
		[
			"omso:PointTimeSeriesObservation"
		],
		"weather_observations_timevaluepair2.c2t" : 
		[
			"omso:PointTimeSeriesObservation"
		]
	}
}
