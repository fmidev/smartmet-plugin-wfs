
disabled = false;

id = "ObsQcTest";

debugLevel = 0;

constructor_name = "wfs_obs_handler_factory";

title:
{
	eng = "FMI WFS <test> stored query with QC parameters enabled";
};

abstract:
{
	eng = "More detailed description of FMI WFS test stored query";
};

template = "hash_dump.c2t";

parameters:
(

{
	name = "begin";
	title = { eng = "Begin of the time interval"; };
	abstract = { eng = "More detailed description of optional parameter <bar>"; };
	xmlType = "xsi:dateTime";
	type = "time";
        lowerLimit = "2012-01-01T00:00:00";
},

{
	name = "end";
	title = { eng = "Parameter bar2"; };
	abstract = { eng = "More detailed description of optional parameter bar2"; };
	xmlType = "xsi:dateTime";
	type = "time";
},

{
	name = "place";
	title = { eng = "Sites for which to find observations"; };
	abstract = { eng = "Sites for which to find observations"; };
	xmlType = "string";
	type = "string";
        minOccurs = 0;
        maxOccurs = 999;
},

{
	name = "wmo";
	title = { eng = "Sites for which to find observations"; };
	abstract = { eng = "Sites for which to find observations"; };
	xmlType = "integerList";
	type = "int[0..999]";
        minOccurs = 0;
        maxOccurs = 999;
},

{
	name = "parameter";
	title = { eng = "Parameter bar4"; };
	abstract = { eng = "More detailed description of optional parameter bar4"; };
	xmlType = "gml:NameList";
	type = "string[1..999]";
        minOccurs = 1;
        maxOccurs = 999;
},

{
	name = "timestep";
	title = { eng = "Parameter bar5"; };
	abstract = { eng = "More detailed description of optional parameter bar5"; };
	xmlType = "unsignedInteger";
	type = "uint";
},

{
	name = "maxdistance";
	title = { eng = "Parameter bar5"; };
	abstract = { eng = "More detailed description of optional parameter bar5"; };
	xmlType = "double";
	type = "double";
        upperLimit = 100000.0;
},

{
	name = "numofstations";
	title = { eng = "Parameter bar5"; };
	abstract = { eng = "More detailed description of optional parameter bar5"; };
	xmlType = "unsignedInteger";
	type = "uint";
        upperLimit = 10;
},

{
	name = "locale";
	title = { eng = "Parameter bar5"; };
	abstract = { eng = "More detailed description of optional parameter bar5"; };
	xmlType = "string";
	type = "string";
},

{
	name = "bbox";
	title = { eng = "Parameter bar5"; };
	abstract = { eng = "More detailed description of optional parameter bar5"; };
	xmlType = "string";
	type = "bbox";
},

{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; };
        abstract = { eng = "Coordinate projection to use in results"; };
        xmlType = "string";
        type = "string";
},

{
        name = "missingText";
        title = { eng = "missingText"; };
        abstract = { eng = "missingText"; };
        xmlType = "string";
        type = "string";
},

{
        name = "tz";
        title = { eng = "Time zone"; };
        abstract = { eng = "Time zone"; };
        xmlType = "string";
        type = "string";
},

{
        name = "qualityInfo";
        title = { eng = "Quality info"; };
        abstract = { eng = "Specifies whether to include quality info"; };
        xmlType = "xsi:boolean";
        type = "bool";
},

{
	name = "language";
	title = { eng = "Language"; };
	abstract = { eng = "Language"; };
	xmlType = "xsi:string";
	type = "string";
}

);

named_params:
(
        {name:"defaultMeteoParam"; def=["Temperature", "pressure", "WindSpeedMS","WindDirection","Precipitation1h"];},
        {name:"empty_array"; def=[];}
);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
	latest = false;
        beginTime = "${begin:12 hours ago}";
        endTime = "${end:now}";
        places = ["${place > empty_array}"];
        meteoParameters = ["${parameter}"];
        stationType = "opendata";
        timeStep = "${timestep:60}";
        maxDistance = "${maxdistance:50000.0}";
        wmos = ["${wmo > empty_array}"];
        lpnns = [];
        fmisids = [];
        geoids = [];
        latlons = [];
        keyword = "";
	keyword_overwritable = false;
        numOfStations = "${numofstations:1}";
        hours = [];
        weekDays = [];
        locale = "${locale:fi_FI.utf8}";
        missingText = "${missingText:nan}";
        boundingBox = "${bbox}";
        maxEpochs = "200";
        crs = "${crs:EPSG::4326}";
        timeZone = "${tz : UTC}";
	qualityInfo = true;
	language = "${language}";
};

separateGroups = true;
