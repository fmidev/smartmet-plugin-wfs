disabled = false;
demo = false;

id = "RadarHclassTest";
constructor_name = "wfs_stored_geoserver_handler_factory";
title: {
         fin = "S채채tutka - olomuoto - alin kulma.";
       	 eng = "Weather radar - hydro class - lowest angle.";
       };
abstract: {
         fin = "Suomen s채채tutkien olomuoto alimmalta skannauskulmalta.";
       	 eng = "Finnish weather radar hydro class from the lowest scanning angle.";
       };

template = "hash_dump.c2t";
returnTypeNames = ["omso:GridSeriesObservation"];

parameters: (
    {
        name: "begin";
        title: { eng="The begin of time interval (ISO format)"; };
        abstract: { eng="The begin of time interval (ISO format)"; };
        xmlType: "xsi:dateTime";
        type: "time";
    },

    {
        name: "end";
        title: { eng="The begin of time interval (ISO format)"; };
        abstract: { eng="The begin of time interval (ISO format)"; };
        xmlType: "xsi:dateTime";
        type: "time";
    },

    {
        name: "layers";
        title: { eng="layers"; };
        abstract: { eng="layers"; };
        xmlType: "gml:NameList";
        type: "string[1..999]";
    },

    {
        name: "bbox";
        title: { eng="Bounding box"; };
        abstract: { eng="Bounding box"; };
        xmlType: "string";
        type: "bbox";
    },

    {
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; };
        abstract = { eng = "Coordinate projection to use in results"; };
        xmlType = "string";
        type = "string";
    },

    {
        name: "width";
        title: {eng: "The width of generated image";};
        abstract: {eng: "The width of generated image"; };
        xmlType: "positiveInteger";
        type: "integer";
    },

    {
        name: "height";
        title: {eng: "The height of generated image";};
        abstract: {eng: "The height of generated image"; };
        xmlType: "positiveInteger";
        type: "integer";
    }
);

named_params = (
   { name = "layer"; def = ["%{layer}"]; }
  ,{ name = "origBoundary"; def = ["%{origEnvelope}"]; }
  ,{ name = "width"; def = "%{width}"; }
  ,{ name = "height"; def = "%{height}"; }
  ,{ name = "epoch"; def = "%{epoch}"; }
  ,{ name = "param"; def = "%{param}"; }
  ,{ name = "defaultBoundingBox"; def = "20.0, 60.0, 30.0, 70.0, EPSG::4326"; }
  ,{ name = "defaultLayers"; def = ["wfs_regression_test_anjalankoski", "wfs_regression_test_kuopio"]; }
  ,{ name = "hclass"; def = "hclass"; }
);

layerParamNameMap = (
        { layer: "wfs_regression_test_anjalankoski"; param:"dbz";}
        ,{ layer: "wfs_regression_test_kuopio"; param:"dbz";}
);

url_template = {
    url = "http://map.fmi.fi/geoserver/Radar/wms";

    params = [
        "service=WMS"
        ,"version=1.1.0"
        ,"request=GetMap"
        ,"layers=Radar:${layer}"
        ,"styles="
        ,"bbox=${origBoundary}"
        ,"width=${width}"
        ,"height=${height}"
        ,"srs=EPSG:3067"
        ,"format=image/geotiff"
        ,"time=${epoch}"
    ];
};

layerDbTableNameFormat: "mosaic.%1%";

handler_params:
{
        begin = "${begin : 1 hour ago}";
        end = "${end : now}";
        layers = ["${layers > defaultLayers}"];
        boundingBox = "${bbox > defaultBoundingBox}";
        width = "${width: 1999}";
        height = "${height: 1999}";
        crs = "${crs:EPSG::4326}";
};
